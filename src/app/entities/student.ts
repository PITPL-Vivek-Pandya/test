import { ListItem } from './list-item';
import { ActivityLog } from './activityLog';
import { StudentStatus } from './student-status';
import { CurrentSchool } from './current-school';
import { YearLevel } from './year-level';
import { Campus } from './campus';
import { PersonalTourStudent } from './personal-tour-student';
import { BookingStudent } from './booking-student';
import { ISelectedItem } from './slected-items';
import { StudentLog } from './student-log';
import { ContactRelationship } from './contact-relationship';
import { Country } from './country';
import { Booking } from './booking';
import { PersonalTourBooking } from './personal-tour-booking';
import { Contact } from './contact';
import { AppStudentMapping } from './app-student-mapping';

export class Student implements ISelectedItem {
    id: number;
    lastName: string;
    firstName: string;
    preferredName: string;
    dateOfBirth: string;
    countryOfOriginId: string;
    countryOfOrigin: Country;
    genderId: number;
    gender: ListItem;
    siblingsId: number;
    siblings: ListItem;
    intakeYearId: number;
    intakeYear: ListItem;
    startingYear: number;
    hasAlumni: string;
    schoolId: number;
    campusId: number;
    campus: Campus;
    schoolInterests: ListItem[] = [];
    otherInterests: ListItem[] = [];
    currentSchoolYearId: number;
    currentSchoolYear: YearLevel;
    submittedApplication: number;
    currentSchoolId: number;
    schoolIntakeYearId: number;
    schoolIntakeYear: YearLevel;
    religionId: number;
    religion: ListItem;
    boardingTypeId: number;
    boardingType: ListItem;
    parishId: number;
    hasSpecialNeeds: boolean | null;
    specialNeeds: ListItem[];
    statusId: number;
    externalId: string;
    financialAidId: number;
    financialAid: ListItem;
    studentStatusId: number;
    leadSourceId: number;
    leadSource: ListItem;
    hearAboutUsId: number;
    hearAboutUs: ListItem;
    markRecord = false;
    notes: string;
    activityLogs: ActivityLog[];
    studentLogs: StudentLog[];
    studentStatus: StudentStatus;
    currentSchool: CurrentSchool;
    bookings: Booking[];
    personalTourBookings: PersonalTourBooking[];
    PersonalTourStudent: PersonalTourStudent;
    BookingStudent: BookingStudent;
    personalTourStudents: PersonalTourStudent[];
    bookingStudents: BookingStudent[];
    // BookingStudent: BookingStudent | PersonalTourStudent;
    createdAt: string;
    updatedAt: string;
    all: ListItem[];
    isExported: boolean;
    isInternational: boolean;
    exportDate: string;
    contactRelationships: ContactRelationship[];
    appStudentMapping: AppStudentMapping;

    // only for angular
    name?: string;
    sIY?: string;
    sy?: string | number;
    studentStatusIdCount?: number;
    selected?: boolean;
    primaryContactLastName?: string;
    primaryContactFirstName?: string;
    primaryContactName?: string;
    primaryContactMobile?: string;
    primaryContactId?: number;
    score?: number;
    stageName?: string;
    contacts: Contact[];
}
